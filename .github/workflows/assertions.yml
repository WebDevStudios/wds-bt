name: Assertions

on:
    pull_request:
        branches: main

    workflow_dispatch:

jobs:
    lint:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [20.x]
                php-versions: ['8.2']

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
              with:
                  token: ${{ github.token }}

            - name: Setup PHP ${{ matrix.php-versions }}
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-versions }}
                  tools: composer:v2, phpcs

            - name: Setup Node ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Use NPM 9
              run: npm i -g npm@9

            - name: Cache Node dependencies
              uses: actions/cache@v2
              with:
                  path: ~/.npm
                  key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: ${{ runner.OS }}-node-

            - name: Cache Composer dependencies
              uses: actions/cache@v2
              with:
                  path: /tmp/composer-cache
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.OS }}-composer-

            - name: Authorize Composer with WDS packagist server
              run: echo '${{ secrets.COMPOSER_AUTH }}' > $GITHUB_WORKSPACE/auth.json

            - name: Install dependencies
              run: |
                  composer install --quiet
                  npm ci --legacy-peer-deps --ignore-scripts --no-fund --no-audit --quiet

            - name: Lint PHP
              run: npm run lint:php

            - name: Lint scripts
              run: npm run lint:js

            - name: Lint styles
              run: npm run lint:css

            - name: Lint markdown
              run: npm run lint:md

            - name: Lint package.json
              run: npm run lint:pkg-json
